### JSON (JavaScript Object Notation)

Explanation:
JSON (JavaScript Object Notation) is a 
lightweight data-interchange format that is 
easy for humans to read and write 
and easy for machines 
to parse and generate. 
It is primarily used to transmit data between 
a server and a web application as text. 
JSON represents data as key-value pairs and is a 
language-independent format.

**Analogy:**
Imagine you have a simple recipe card for making a 
sandwich. 
The recipe lists the ingredients and their 
quantities 
(like "bread: 2 slices," "cheese: 1 slice"). 
JSON is like that recipe card, where each ingredient
 (key) is paired with a quantity (value). 
 Just as a recipe tells you how to make a sandwich,
 JSON tells a program how to structure and access 
 the data.

**Programmatic Example:**
refer ro json1.py

### JSON File

**Explanation:**
A JSON file is a file that contains data in 
the JSON format. 
It is typically used to 
store and exchange data 
between systems. 
The content of the JSON file is a 
serialized version of an object or 
data structure that can be easily shared or 
transferred.

**Analogy:**
Think of a JSON file as a box where you 
store your recipe cards. 
Each recipe (JSON object) is neatly stored 
inside this box (file). 
When you need to cook something, you simply open the
 box, pick the recipe card, and follow the 
 instructions. 
 Similarly, when a program needs to use the
 data stored in a JSON file, it reads the file,
 parses the JSON content, and processes it.
 

**Programmatic Example:**
Here's an example of working with a JSON file in Python:

1. **Writing JSON data to a file:**

```python
import json

# Data to be written to the JSON file
data = {
    "name": "Alice",
    "age": 25,
    "city": "Los Angeles"
}

# Writing to a JSON file
with open('data.json', 'w') as json_file:
    json.dump(data, json_file)
```

2. **Reading JSON data from a file:**

```python
import json

# Reading from a JSON file
with open('data.json', 'r') as json_file:
    data = json.load(json_file)

# Accessing values
print(data['name'])  # Output: Alice
print(data['age'])   # Output: 25
```

In this example, the `data.json` file acts as a 
storage for the JSON data, and the program can read 
from or write to this file 
as needed.

